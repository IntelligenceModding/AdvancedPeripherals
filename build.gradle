buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1+', changing: true
        classpath 'com.android.tools.build:gradle:2.3.0'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mod_version}"
group = 'de.srendi.advancedperipherals'
archivesBaseName = 'advancedperipherals'

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {

    mappings channel: 'snapshot', version: "${mappings_version}"

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            properties 'mixin.env.disableRefMap': 'true'
            properties 'forge.logging.console.level': 'debug'

            mods {
                advancedperipherals {
                    source sourceSets.main
                }
            }
            if (project.hasProperty('mc_uuid')) {
                args '--uuid', project.getProperty('mc_uuid')
            }
            if (project.hasProperty('mc_username')) {
                args '--username', project.getProperty('mc_username')
            }
            if (project.hasProperty('mc_accessToken')) {
                args '--accessToken', project.getProperty('mc_accessToken')
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			properties 'mixin.env.disableRefMap': 'true'
            property 'forge.logging.console.level', 'debug'

            mods {
                advancedperipherals {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'advancedperipherals', '--all',
                    '--existing', file('src/main/resources').toString(),
                    '--existing', file('src/generated/resources').toString(),
                    '--output', file('src/generated/resources/')

            mods {
                advancedperipherals {
                    source sourceSets.main
                }
            }
        }

    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven { url 'https://squiddev.cc/maven/' }
    maven { url 'https://modmaven.dev/' }
    maven { url 'https://dvs1.progwml6.com/files/maven/' }
    maven { url 'https://repo.refinedmods.com/' }
	maven { url = "https://maven.theillusivec4.top/" }
}

dependencies {

    compileOnly "org.jetbrains:annotations:${jb_annotations}"

    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("org.squiddev:cc-tweaked-1.16.4:${cc_version}")
    implementation fg.deobf("com.refinedmods:refinedstorage:${rs_version}")
    compileOnly fg.deobf("appeng:appliedenergistics2:${ae_version}:api");
    runtimeOnly fg.deobf("appeng:appliedenergistics2:${ae_version}");
	
	runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")

    runtimeOnly fg.deobf("mcjty.theoneprobe:TheOneProbe-1.16:${top_version}")
    //Mods to test stuff(Not required mods)
    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.19.446")
    runtimeOnly fg.deobf("mekanism:Mekanism:1.16.4-10.0.19.446:generators")
    runtimeOnly fg.deobf("mezz.jei:jei-1.16.4:7.6.0.62")

}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "advancedperipherals",
                "Specification-Vendor"    : "Sr_endi",
                "Specification-Version"   : "${version}",
                "Implementation-Title"    : "advancedperipherals",
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "Sr_endi",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}