<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <property name="tabWidth" value="4"/>
    <property name="charset" value="UTF-8" />

    <module name="SuppressionFilter">
        <property name="file" value="${config_loc}/suppressions.xml" />
    </module>

    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="render_old"/>
    </module>
    <module name="TreeWalker">
        <!-- Annotations -->
        <module name="AnnotationLocation" />
        <module name="AnnotationUseStyle" />
        <module name="MissingDeprecated" />
        <module name="MissingOverride" />

        <!-- Blocks -->
        <module name="EmptyBlock">
            <property name="tokens" value="LITERAL_WHILE,LITERAL_TRY,LITERAL_FINALLY,LITERAL_DO,LITERAL_IF,LITERAL_ELSE,INSTANCE_INIT,STATIC_INIT,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_CASE,LITERAL_DEFAULT,ARRAY_INIT"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="ignored" />
        </module>
        <module name="LeftCurly">
            <property name="option" value="eol" />
            <!-- The defaults, minus lambdas. -->
            <property name="tokens" value="ANNOTATION_DEF,CLASS_DEF,CTOR_DEF,ENUM_CONSTANT_DEF,ENUM_DEF,INTERFACE_DEF,LITERAL_CASE,LITERAL_CATCH,LITERAL_DEFAULT,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,METHOD_DEF,OBJBLOCK,STATIC_INIT" />
        </module>
        <module name="RightCurly">
            <property name="option" value="same" />
        </module>

        <!-- Class design. As if we've ever followed good practice here. -->
        <module name="MutableException" />
        <module name="OneTopLevelClass" />

        <!-- Coding -->
        <module name="ArrayTrailingComma" />
        <module name="EqualsHashCode" />
        <!-- FallThrough does not handle unreachable code well -->
        <module name="IllegalInstantiation" />
        <module name="IllegalThrows" />
        <module name="ModifiedControlVariable" />
        <module name="NoClone" />
        <module name="NoFinalizer" />
        <module name="OneStatementPerLine" />
        <module name="PackageDeclaration" />
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="StringLiteralEquality" />
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration" />
        <module name="UnnecessarySemicolonInTryWithResources" />
        <module name="UnnecessarySemicolonInEnumeration" />

        <!-- Imports -->
        <!-- <module name="CustomImportOrder" /> -->
        <module name="IllegalImport" />
        <module name="RedundantImport" />
        <module name="UnusedImports" />

        <!-- Javadoc -->
        <module name="AtclauseOrder" />
        <module name="InvalidJavadocPosition" />
        <module name="JavadocBlockTagLocation" />
        <module name="JavadocType"/>
        <module name="NonEmptyAtclauseDescription" />
        <module name="SingleLineJavadoc" />
        <!--<module name="SummaryJavadocCheck"/>-->

        <!-- Misc -->
        <module name="ArrayTypeStyle" />
        <module name="CommentsIndentation" />
        <module name="Indentation" />
        <module name="OuterTypeFilename" />

        <!-- Modifiers -->
        <module name="ModifierOrder" />
        <module name="RedundantModifier" />

        <!-- Naming -->
        <module name="ClassTypeParameterName">
            <property name="format" value="[A-Z ]+"/>
        </module>
        <module name="InterfaceTypeParameterName" />
        <module name="LambdaParameterName" />
        <module name="LocalFinalVariableName" />
        <module name="LocalVariableName" />
        <module name="MemberName" />
        <module name="MethodTypeParameterName">
            <property name="format" value="[A-Z ]+"/>
        </module>
        <module name="PackageName">
            <property name="format" value="(?:(dan200\.computercraft)|(de\.srendi\.advancedperipherals))(\.[a-z][a-z0-9]*)*" />
            <!-- For the game tests -->
        </module>
        <module name="ParameterName" />
        <module name="StaticVariableName">
            <property name="format" value="^[a-z][a-zA-Z0-9]*|CAPABILITY(_[A-Z_]+)?$" />
            <property name="applyToPrivate" value="false" />
        </module>
        <module name="StaticVariableName">
            <property name="format" value="^(s_)?[a-z][a-zA-Z0-9]*|CAPABILITY(_[A-Z_]+)?$" />
            <property name="applyToPrivate" value="true" />
        </module>
        <module name="TypeName" />

        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad">
            <property name="option" value="space"/>
        </module>
        <module name="GenericWhitespace" />
        <module name="MethodParamPad" />
        <module name="NoLineWrap" />
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="AT,INC,DEC,UNARY_MINUS,UNARY_PLUS,BNOT,LNOT,DOT,ARRAY_DECLARATOR,INDEX_OP" />
        </module>
        <module name="NoWhitespaceBefore" />
        <module name="SeparatorWrap">
            <property name="option" value="EOL" />
            <property name="tokens" value="COMMA,SEMI,ELLIPSIS,ARRAY_DECLARATOR,RBRACK,METHOD_REF" />
        </module>
        <module name="SeparatorWrap">
            <property name="option" value="NL" />
            <property name="tokens" value="DOT,AT" />
        </module>
        <module name="SingleSpaceSeparator" />
        <module name="TypecastParenPad" />
        <module name="WhitespaceAfter">
            <property name="tokens" value="COMMA,SEMI" />
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="if \(.*\) \S+;"/>
            <property name="message" value="Single-line if statements without braces must have a newline after the condition."/>
        </module>
        <module name="WhitespaceAround">
            <property name="ignoreEnhancedForColon" value="false" />
            <!-- Allow empty functions -->
            <property name="allowEmptyTypes" value="true" />
            <property name="allowEmptyLambdas" value="true" />
            <property name="allowEmptyMethods" value="true" />
            <property name="allowEmptyConstructors" value="true" />

            <property name="tokens" value="ASSIGN,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,EQUAL,GE,GT,LAMBDA,LAND,LCURLY,LE,LITERAL_RETURN,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND" />
        </module>
    </module>

    <module name="FileTabCharacter" />
    <module name="NewlineAtEndOfFile" />
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="Trailing whitespace"/>
    </module>
</module>